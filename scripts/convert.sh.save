
    #!/bin/sh
    set -eu

    # Inputs (with defaults)
    SRC_DOC=${SRC_DOC:-src/document.docx}
    OUT_DIR=${OUT_DIR:-site}
    OUT_HTML=${OUT_HTML:-index.html}
    CSS_PATH=${CSS_PATH:-theme/styles.css}
    TITLE=${TITLE:-Kinetics Appendix}

    # Math rendering engine: mathjax | katex
    MATH_ENGINE=${MATH_ENGINE:-mathjax}
    # CDN URLs (can be overridden)
    MATHJAX_URL=${MATHJAX_URL:-https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js}
    KATEX_URL=${KATEX_URL:-https://cdn.jsdelivr.net/npm/katex@0.16.11/dist}

    mkdir -p "$OUT_DIR" "$OUT_DIR/assets"
    
	

    mkdir -p "$OUT_DIR"
    ASSETS_DIR="$OUT_DIR/assets"
    mkdir -p "$ASSETS_DIR"

    # Prepare CSS: copy into site/assets so the deployed site can find it
    if [ -f "$CSS_PATH" ]; then
      cp "$CSS_PATH" "$ASSETS_DIR/styles.css"
      CSS_PRESENT=1
    else
      CSS_PRESENT=0
    fi

    # Build head include for math
    HEAD_FILE="/tmp/math-head.html"
    if [ -n "$HEADER_PATH" ] && [ -f "$HEADER_PATH" ]; then
      HEAD_FILE="$HEADER_PATH"
    else
      if [ "$MATH_ENGINE" = "mathjax" ]; then
        # Config first (must be before the loader script)
        cat > "$HEAD_FILE" <<'EOF'
    <script>
      window.MathJax = {
        tex: {
          inlineMath: [['$', '$'], ['\\(', '\\)']],
          displayMath: [['$$','$$'], ['\\[','\\]']],
          tags: 'ams',
          tagSide: 'right',
          tagIndent: '0em'
        },
        options: {
          skipHtmlTags: ['script','noscript','style','textarea','pre','code']
        }
      };
    </script>
    EOF
        # Loader script
        echo "<script src=\"$MATHJAX_URL\" id=\"MathJax-script\" async></script>" >> "$HEAD_FILE"
      elif [ "$MATH_ENGINE" = "katex" ]; then
        CSS_URL="$KATEX_URL/katex.min.css"
        JS_URL="$KATEX_URL/katex.min.js"
        AUTORENDER_URL="$KATEX_URL/contrib/auto-render.min.js"
        cat > "$HEAD_FILE" <<EOF
    <link rel="stylesheet" href="$CSS_URL">
    <script src="$JS_URL"></script>
    <script src="$AUTORENDER_URL"></script>
    <script>
    document.addEventListener("DOMContentLoaded", function() {
      renderMathInElement(document.body, {
        delimiters: [
          {left: "$$", right: "$$", display: true},
          {left: "\\[", right: "\\]", display: true},
          {left: "\\(", right: "\\)", display: false},
          {left: "$", right: "$", display: false}
        ],
        throwOnError: false
      });
    });
    </script>
    EOF
      else
        echo "Unknown MATH_ENGINE: $MATH_ENGINE" >&2
        exit 2
      fi
    fi

    # Build pandoc args
    set -- "$SRC_DOC" \
           -o "$OUT_DIR/$OUT_HTML" \
           --extract-media="$OUT_D
